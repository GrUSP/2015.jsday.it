<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Massimiliano Mantione &#8211; jsDay 2015</title>
	<atom:link href="/speakers/massimiliano-mantione/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>The international Javascript Conference</description>
	<lastBuildDate>Thu, 05 Nov 2015 08:27:32 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.7.2</generator>
	<item>
		<title>You Can Have it Both Ways: Using Web Components in a React UI</title>
		<link>/talk/you-can-have-it-both-ways-using-web-components-in-a-react-ui/</link>
		<pubDate>Fri, 20 Mar 2015 21:50:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		
		<guid isPermaLink="false">/?post_type=talk&#038;p=363</guid>
		<description><![CDATA[Say that you really like how React.js works, and you are building the UI of your web application in React, using React components.But say that there is some Web Component around that is exactly what you need, and you&#8217;d like to use it (after all, that&#8217;s the main point of web components: to be easily [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Say that you really like how React.js works, and you are building the UI of your web application in React, using React components.But say that there is some Web Component around that is exactly what you need, and you&#8217;d like to use it (after all, that&#8217;s the main point of web components: to be easily reusable).In this talk we&#8217;ll see how you can have your cake and eat it too, reusing existing web components inside the React virtual DOM.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Transducers FTW!</title>
		<link>/talk/transducers-ftw/</link>
		<pubDate>Fri, 20 Mar 2015 21:48:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		
		<guid isPermaLink="false">/?post_type=talk&#038;p=362</guid>
		<description><![CDATA[Over time we have seen several &#8220;utility&#8221; frameworks for dealing with Javascript data structures and processing abstractions.It all started simple with Underscode, became more functional with Lodash, and reached the Next Level with Ramda, but it got a bit messy when developers looked for a way out of callback hell (generally through promises or one [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Over time we have seen several &#8220;utility&#8221; frameworks for dealing with Javascript data structures and processing abstractions.It all started simple with Underscode, became more functional with Lodash, and reached the Next Level with <a href="http://ramdajs.com/">Ramda</a>, but it got a bit messy when developers looked for a way out of callback hell (generally through promises or one of the <span style="text-decoration: underline;">reactive</span> frameworks like Rx, Bacon, Highland, Kefir&#8230;).Then the Clojure world brought us <a href="http://blog.cognitect.com/blog/2014/8/6/transducers-are-coming" target="_blank">transducers</a>. They redefine the &#8220;processing a sequence&#8221; concept encompassing the usual &#8220;map&#8221;, &#8220;reduce&#8221;, and &#8220;filter&#8221; functions, and can be applied to both synchronous and asynchronous computations.In this talk we will see how to use them in Javascript (mostly through <a href="http://simplectic.com/projects/underarm)">underarm</a>), and especially how they can help you producing better code.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

 Served from: 2015.jsday.it @ 2017-02-13 21:50:36 by W3 Total Cache -->